upstream ${PROJECT_NAME} {
    server backend:8000;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80;
    listen [::]:80;

    server_name ${HOST_NAME} www.${HOST_NAME};
    return 301 https://${HOST_NAME}$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name www.${HOST_NAME};
    return 301 https://${HOST_NAME}$request_uri;

    ssl_certificate_key /usr/src/${PROJECT_NAME}/ssl/privkey.pem;
    ssl_certificate     /usr/src/${PROJECT_NAME}/ssl/fullchain.pem;

#    ssl_trusted_certificate /usr/src/${PROJECT_NAME}/ssl/chain.pem;
#    ssl_dhparam /usr/src/${PROJECT_NAME}/ssl/dhparams.pem;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name ${HOST_NAME};

    ssl_certificate_key /usr/src/${PROJECT_NAME}/ssl/privkey.pem;
    ssl_certificate     /usr/src/${PROJECT_NAME}/ssl/fullchain.pem;

#    ssl_trusted_certificate /usr/src/${PROJECT_NAME}/ssl/chain.pem;
#    ssl_dhparam /usr/src/${PROJECT_NAME}/ssl/dhparams.pem;

    location / {
        proxy_pass http://${PROJECT_NAME};
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_redirect off;
    }

    location /static {
        alias /usr/src/${PROJECT_NAME}/static;
    }
    location /media {
        alias /usr/src/${PROJECT_NAME}/media;
    }
}
