image:
  name: docker/compose:latest

services:
  - docker:dind

stages:
  - build
  - test
  - staging
  - deploy

variables:
  PROJECT_NAME: hellopanda
  HOST_NAME: project
  USER_ID: 993
  GROUP_ID: 992
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

# before_script:
#   - cp .env.template .env
#   - cp .env.template env/common.env
#   - cp env/back.env.template env/back.env
#   - cp env/db.env.template env/db.env

#   - source .env
#   - source env/common.env
#   - source env/back.env
#   - source env/db.env

Docker build:
  stage: build
  only:
    - dev
    - master
  before_script:
    - echo "Stage build"

    - cp .env.template .env
    - cp .env.template env/common.env
    - cp env/back.env.template env/back.env
    - cp env/db.env.template env/db.env

    - source .env
    - source env/common.env
    - source env/back.env
    - source env/db.env

    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY 

  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE backend
    - docker push $CONTAINER_TEST_IMAGE
  tags:
    - docker-django


Unit tests:
  stage: test
  only:
    - dev
    - master
  
  before_script:
    - echo "Stage test"

    - cp .env.template .env
    - cp .env.template env/common.env
    - cp env/back.env.template env/back.env
    - cp env/db.env.template env/db.env

    - source .env
    - source env/common.env
    - source env/back.env
    - source env/db.env

    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY 

  script:

    - docker pull $CONTAINER_TEST_IMAGE
    
    - docker-compose run backend python manage.py collectstatic --no-input
    - docker-compose run backend python manage.py makemigrations
    - docker-compose run backend python manage.py migrate
    - docker-compose run backend python manage.py loaddata init_data.json

    - docker-compose run backend pytest

    - docker-compose down
  tags:
    - docker-django


deploy_staging:
  stage: staging
  environment:
    name: staging
    url: https://hqua0177372.online-vm.com
  before_script:
    - echo "Stage staging"

    - cp .env.template .env
    - cp .env.template env/common.env
    - cp env/back.env.template env/back.env
    - cp env/db.env.template env/db.env

    - source .env
    - source env/common.env
    - source env/back.env
    - source env/db.env

    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY 

  script:
    - docker pull $CONTAINER_TEST_IMAGE

    - docker-compose run backend python manage.py collectstatic --no-input
    - docker-compose run backend python manage.py makemigrations
    - docker-compose run backend python manage.py migrate
    - docker-compose run backend python manage.py loaddata init_data.json

    - docker-compose down

    - docker-compose -f docker-compose.yml -f docker-compose.prod.yml up --build -d
  only:
    - dev
  tags:
    - docker-django
