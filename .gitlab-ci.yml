stages:
    - build
    - test
    - deploy

variables:
#   DOCKER_HOST: tcp://docker:2375/
#   DOCKER_DRIVER: overlay2
  PROJECT_NAME: hellopanda
  USER_ID: 993
  GROUP_ID: 992

image:
  name: docker/compose:latest

services:
  - docker:dind

before_script:
  - docker version
  - docker-compose version

  - docker-compose down
  - cp .env.template .env
  - cp .env.template env/common.env
  - cp env/back.env.template env/back.env
  - cp env/db.env.template env/db.env

after_script:
  - docker-compose down

Docker build:
    stage: build
    script:
      - source .env
      - source env/common.env
      - source env/back.env
      - source env/db.env
      - docker-compose build
      - docker-compose run backend python manage.py collectstatic --no-input
      - docker-compose run backend python manage.py makemigrations
      - docker-compose run backend python manage.py migrate
      - docker-compose run backend python manage.py loaddata init_data.json
    tags:
        - docker-django

Unit tests:
  stage: test
  script:
    - source .env
    - source env/common.env
    - source env/back.env
    - source env/db.env
    - docker-compose run backend ls -lah backend/
    - docker-compose run backend pytest
  tags:
    - docker-django

# Linters:
#     stage: test
#     script:
#         - echo "Run linters"
#     tags:
#         - docker-django

# Deploy to dev:
#     stage:
#         deploy
#     script:
#         - echo "${CI_PROJECT_NAME} from ${CI_COMMIT_REF_SLUG} [stage ${CI_JOB_STAGE}]"
#     tags:
#         - docker-django
