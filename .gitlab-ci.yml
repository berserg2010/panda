image:
  name: docker/compose:latest

services:
  - docker:dind

stages:
    - build
    - test
    - deploy

variables:
#   DOCKER_HOST: tcp://docker:2375/
#   DOCKER_DRIVER: overlay2
  PROJECT_NAME: hellopanda
  USER_ID: 993
  GROUP_ID: 992
  CONTAINER_TEST_IMAGE: gitlab-dev.ddns.net:5050/hellopanda_project/hellopanda:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: gitlab-dev.ddns.net:5050/hellopanda_project/hellopanda:latest


before_script:
  # - docker version
  # - docker-compose version


  # - cp .env.template .env
  # - cp .env.template env/common.env
  # - cp env/back.env.template env/back.env
  # - cp env/db.env.template env/db.env
  # - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

# after_script:
#   - docker-compose down

Docker build:
  stage: build
  script:
    - cp .env.template .env
    - cp .env.template env/common.env
    - cp env/back.env.template env/back.env
    - cp env/db.env.template env/db.env

    - source .env
    - source env/common.env
    - source env/back.env
    - source env/db.env

    - docker logout
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY 

    - docker build -f backend/Dockerfile -t $CONTAINER_TEST_IMAGE .
    
    - docker-compose run backend python manage.py collectstatic --no-input
    - docker-compose run backend python manage.py makemigrations
    - docker-compose run backend python manage.py migrate
    - docker-compose run backend python manage.py loaddata init_data.json

    - docker push $CONTAINER_TEST_IMAGE
  tags:
    - docker-django


Unit tests:
  stage: test
  only:
    - dev
    - master
  script:
    # - source .env
    # - source env/common.env
    # - source env/back.env
    # - source env/db.env

    # - docker-compose up --build -d
    # - docker-compose stop

    # - docker-compose run backend python manage.py collectstatic --no-input
    # - docker-compose run backend python manage.py makemigrations
    # - docker-compose run backend python manage.py migrate
    # - docker-compose run backend python manage.py loaddata init_data.json

    - docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY << $CI_BUILD_TOKEN

    - docker-compose pull $CONTAINER_TEST_IMAGE

    - docker-compose run pytest
  tags:
    - docker-django

# Linters:
#     stage: test
#     script:
#         - echo "Run linters"
#     tags:
#         - docker-django

Deploy to dev:
  stage: deploy
  only:
    - master
  script:
      - echo "${CI_PROJECT_NAME} from ${CI_COMMIT_REF_SLUG} [stage ${CI_JOB_STAGE}]"
  tags:
      - docker-django
  when: manual
