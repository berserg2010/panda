image:
  name: docker/compose:latest

services:
  - docker:dind

stages:
    - build
    - test
    - staging
    - deploy

variables:
  PROJECT_NAME: hellopanda
  HOST_NAME: project
  USER_ID: 993
  GROUP_ID: 992
  CONTAINER_TEST_IMAGE: $CI_REGISTRY/hellopanda_project/hellopanda:$CI_BUILD_REF_NAME
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY/hellopanda_project/hellopanda:latest


before_script:
  # - docker version
  # - docker-compose version

  - cp .env.template .env
  - cp .env.template env/common.env
  - cp env/back.env.template env/back.env
  - cp env/db.env.template env/db.env

  - source .env
  - source env/common.env
  - source env/back.env
  - source env/db.env

  - docker logout
  - echo $CI_REGISTRY
  - echo $CI_REGISTRY_USER
  - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY 


# after_script:
#   - docker-compose down

Docker build:
  stage: build
  only:
    - dev
    - master
  script:

    # - docker build -f ./backend/Dockerfile -t $CONTAINER_TEST_IMAGE ./backend/
    - docker-compose build
    
    - docker-compose run backend python manage.py collectstatic --no-input
    - docker-compose run backend python manage.py makemigrations
    - docker-compose run backend python manage.py migrate
    - docker-compose run backend python manage.py loaddata init_data.json

    - docker push $CONTAINER_TEST_IMAGE
  tags:
    - docker-dev


Unit tests:
  stage: test
  only:
    - dev
    - master
  script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY 

    - docker pull $CONTAINER_TEST_IMAGE
    
    # - docker-compose up -d db
    # - docker-compose up -d redis
 
    # - docker-compose run backend python manage.py collectstatic --no-input
    # - docker-compose run backend python manage.py makemigrations
    # - docker-compose run backend python manage.py migrate
    # - docker-compose run backend python manage.py loaddata init_data.json

    - docker-compose run backend pytest

    # - docker run --env-file ./env/common.env --env-file ./env/back.env --workdir /usr/src/$PROJECT_NAME $CONTAINER_TEST_IMAGE pytest 
    
    - docker-compose down
  tags:
    - docker-dev

deploy_staging:
  stage: staging
  environment:
    name: staging
    url: https://hqua0177372.online-vm.com
  script:
    - git clone git@gitlab-dev.ddns.net:hellopanda_project/hellopanda.git

    - docker-compose down

    - docker-compose run backend python manage.py collectstatic --no-input
    - docker-compose run backend python manage.py makemigrations
    - docker-compose run backend python manage.py migrate
    - docker-compose run backend python manage.py loaddata init_data.json

    - docker-compose -f docker-compose.yml -f docker-compose.prod.yml up --build -d
  only:
    - dev
  tags:
    - docker-dev
